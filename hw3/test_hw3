import pytest
from hw2_task3 import Matrix

@pytest.mark.parametrize("matr1, matr2, exp_matr", [
    (
        [[1, 0, 0],
         [0, 2, 1],
         [1, 1, 3]],

        [[1, 0, 0],
         [0, 2, 1],
         [1, 1, 3]],

        [[2, 0, 0],
         [0, 4, 2],
         [2, 2, 6]],
    )
])
def test_matr_add(matr1, matr2, exp_matr):
    res_matr = Matrix(matr1) + Matrix(matr2)
    assert res_matr == Matrix(exp_matr)


@pytest.mark.parametrize("matr1, matr2, exp_matr", [
    (
        [[1, 0, 0],
         [0, 2, 1],
         [1, 1, 3]],

        [[1, 0, 0],
         [0, 2, 1],
         [1, 1, 3]],

        [[0, 0, 0],
         [0, 0, 0],
         [0, 0, 0]],
    )
])
def test_matr_sub(matr1, matr2, exp_matr):
    res_matr = Matrix(matr1) - Matrix(matr2)
    assert res_matr == Matrix(exp_matr)


@pytest.mark.parametrize("matr, n, exp_matr", [
    (
        [[1, 0, 0],
         [0, 2, 1],
         [1, 1, 3]],

        2,

        [[2, 0, 0],
         [0, 4, 2],
         [2, 2, 6]],
    )
])
def test_matr_mul(matr, n, exp_matr):
    res_matr = Matrix(matr) * n
    assert res_matr == Matrix(exp_matr)


@pytest.mark.parametrize("matr, n, exp_matr", [
    (
        [[1, 0, 0],
         [0, 2, 1],
         [1, 1, 3]],

        2,

        [[0.5, 0, 0],
         [0, 1, 0.5],
         [0.5, 0.5, 1.5]],
    )
])
def test_matr_truediv(matr, n, exp_matr):
    res_matr = Matrix(matr) / n
    assert res_matr == Matrix(exp_matr)
