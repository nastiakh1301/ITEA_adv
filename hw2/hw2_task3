class Matrix:
    def __init__(self, matr):
        self.matr = matr

    def __add__(self, other):
        matr_temp = []
        for i in range(len(self.matr)):
            matr_temp.append([])
            for j in range(len(self.matr[0])):
                matr_temp[i].append(self.matr[i][j] + other.matr[i][j])
        return Matrix(matr_temp)


    def __sub__(self, other):
       matr_temp = []
       for i in range(len(self.matr)):
           matr_temp.append([])
           for j in range(len(self.matr[0])):
               matr_temp[i].append(self.matr[i][j] - other.matr[i][j])
       return Matrix(matr_temp)
    
    
    def __mul__(self, n):
        matr_temp = []
        for i in range(len(self.matr)):
            matr_temp.append([])
            for j in range(len(self.matr[0])):
                matr_temp[i].append(self.matr[i][j] * n)
        return Matrix(matr_temp)
    
    
    def __truediv__(self, n):
        if n == 0:
            print("error");
        else:
            matr_temp = []
            for i in range(len(self.matr)):
                matr_temp.append([])
                for j in range(len(self.matr[0])):
                    matr_temp[i].append(self.matr[i][j] / n)
            return Matrix(matr_temp)

    def __str__(self):
        return str('\n'.join(['\t'.join([str(j) for j in i]) for i in self.matr]))

m1 = [[4, 4], [6, 2]]
m2 = [[2, 3], [5, 0]]

matr1 = Matrix(m1)
matr2 = Matrix(m2)

print(matr1 + matr2)
print(matr1 - matr2)
print(matr1 * 2)
print(matr1 / 2)

